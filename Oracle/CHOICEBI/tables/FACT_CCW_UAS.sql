DROP TABLE FACT_CCW_UAS CASCADE CONSTRAINTS;

CREATE TABLE FACT_CCW_UAS
(
  DL_ASSESS_SK                    NUMBER        NOT NULL,
  MEMBER_ID                       NUMBER        ,
  ASSESSMENTDATE                  DATE,
  ACQUIRED_HYPOTHYROIDISM         NUMBER,
  ACUTE_MYOCARDIAL_INFARCTION     NUMBER,
  ALZHEIMERS                      NUMBER,
  ALZHEIMERS_SENILE_DEMENTIA      NUMBER,
  ANEMIA                          NUMBER,
  ASTHMA                          NUMBER,
  ATRIAL_FIBRILLATION             NUMBER,
  BENIGN_PROSTATIC_HYPERPLASIA    NUMBER,
  CATARACT                        NUMBER,
  CHRONIC_KIDNEY                  NUMBER,
  CHRONIC_OBSTR_PULMONARY         NUMBER,
  DEPRESSION                      NUMBER,
  DIABETES                        NUMBER,
  GLAUCOMA                        NUMBER,
  HEART_FAILURE                   NUMBER,
  HIP_PELVIC_FRACTURE             NUMBER,
  HYPERLIPIDEMIA                  NUMBER,
  HYPERTENSION                    NUMBER,
  ISCHEMIC_HEART                  NUMBER,
  OSTEOPOROSIS                    NUMBER,
  RHEUMATOID_ARTHRITIS_OSTEOARTH  NUMBER,
  STROKE_TRANSIENT_ISCHEMIC_ATT   NUMBER,
  F_M_BREAST_CANCER               NUMBER,
  COLORECTAL_CANCER               NUMBER,
  PROSTATE_CANCER                 NUMBER,
  LUNG_CANCER                     NUMBER,
  ENDOMETRIAL_CANCER              NUMBER
);


grant select on FACT_CCW_UAS to mstrstg;

grant select on FACT_CCW_UAS to sf_choice;

grant select on FACT_CCW_UAS to link_adm;

grant select on FACT_CCW_UAS to roc_ro;


lu_sql


WITH v_RAWDATA0 AS
(
    SELECT /*+ materialize no_merge */ DISTINCT DL_ASSESS_SK, MEMBER_ID FROM CHOICE.DIM_MEMBER_ASSESSMENTS@DLAKE
),
v_RAWDATA1 AS      --TAKE ONLY THOSE ICD CODES THAT ARE FULLY NUMERIC AND THAT DO NOT SHOW UP IN THE RAW CCW TABLE
(       
    SELECT /*+ materialize no_merge */ TO_CHAR(CODE) AS CODE, DESCRIPTION, COUNT(CODE) as N FROM
                (
                SELECT DISTINCT RECORD_ID, DESCRIPTION, TO_CHAR(REPLACE(CODE,'.','')) AS CODE
                FROM DW_OWNER.UAS_ASSES_DISEASE@NEXUS2
                ) A
    LEFT JOIN DIM_CRONIC_CONDITIONS B
    ON A.CODE = B.ICD_CODE
    WHERE EXCL_FIELD IS NULL  AND COMPLICATION IS NULL AND SUBSTR(A.CODE,0,1) IN ('0','1','2','3','4','5','6','7','8','9')
    GROUP BY CODE, COMPLICATION, DESCRIPTION
    ORDER BY COUNT(CODE) DESC
)
,v_RAWDATA2 AS         --TAKE ALL ICD 9 AND ICD 10 CODES
(     
        SELECT * FROM DIM_ICD_CODES 
) 
,v_RAWDATA3 AS (       --TAKE ALL THOSE THAT DID NOT MATCH UP TO ANY ICD9 AND ICD10 AND ADD A 0 AT THE END OR 00 AT THE END AND SEE IF ANYTHING SHOWS UP
    SELECT
    CASE 
    WHEN B.CODE IS NULL AND (A.CODE || '0') IN (SELECT CODE FROM v_RAWDATA2) THEN A.CODE || '0' 
    WHEN B.CODE IS NULL AND (A.CODE || '00') IN (SELECT CODE FROM v_RAWDATA2) THEN A.CODE || '00'
    WHEN B.CODE IS NULL AND (A.CODE || '000') IN (SELECT CODE FROM v_RAWDATA2) THEN A.CODE || '000'
    ELSE B.CODE END AS UPGRADED_CODE
    ,A.CODE AS ORIG_CODE
    ,A.DESCRIPTION
    ,A.N
    FROM v_RAWDATA1 A
    LEFT JOIN v_RAWDATA2 B ON A.CODE = B.CODE
    WHERE B.CODE IS NULL
)
,v_RAWDATA4 AS    --  IDENTIFY ALL THE RESOLVED AND UPDATED ICD CODES
(          
    SELECT * 
    FROM v_RAWDATA3 
    WHERE UPGRADED_CODE IS NOT NULL  --  FROM 258 UNIDENTIFIED TO 10 UNIDENTIFIED PIECES 
    ORDER BY N DESC
)
,RAWDATA1 AS (      
    SELECT /*+ materialize no_merge */
    DISTINCT B.DL_ASSESS_SK, B.MEMBER_ID, A.ASSESSMENTDATE
    ,CASE WHEN  (NEUROLOGICALALZHEIMERS) > 0 THEN 1 ELSE 0 END AS ALZHEIMERS --3 years
    ,CASE WHEN  (NEUROLOGICALDEMENTIA) > 0 THEN 1 ELSE 0 END AS ALZHEIMERS_SENILE_DEMENTIA --3 years
    ,CASE WHEN  (NEUROLOGICALSTROKE) > 0 THEN 1 ELSE 0 END AS STROKE_TRANSIENT_ISCHEMIC_ATT --1 years
    ,CASE WHEN  (CARDIACPULMONARY) > 0 THEN 1 ELSE 0 END AS CHRONIC_OBSTR_PULMONARY --1 years
    ,CASE WHEN  (CARDIACFAILURE) > 0 THEN 1 ELSE 0 END AS HEART_FAILURE --2 years
    ,CASE WHEN  (PSYCHIATRICDEPRESSION) > 0 THEN 1 ELSE 0 END AS DEPRESSION --1 years
    ,CASE WHEN  (OTHERDIABETES) > 0 THEN 1 ELSE 0 END AS DIABETES  --2 years
    ,CASE WHEN  (MUSCULOSKELETALHIP) > 0 THEN 1 ELSE 0 END AS HIP_PELVIC_FRACTURE --1 years
    FROM DW_OWNER.UAS_COMMUNITYHEALTH@NEXUS2 A INNER JOIN v_RAWDATA0 B 
    ON A.RECORD_ID = B.DL_ASSESS_SK
)
,RAWDATA2 AS -- THIS WILL TAKE THE CODE THAT IS MOST CORRECT OF THE TWO POTENTIAL CODES
(  
    SELECT /*+ materialize no_merge use_hash(a, b, c)*/  *  FROM
    v_RAWDATA0 C
    LEFT JOIN (
                SELECT /*+ materialize no_merge */ DISTINCT A.RECORD_ID, ASSESSMENTDATE, 
                NVL(B.UPGRADED_CODE,REPLACE(A.CODE,'.','')) AS CODE
                FROM DW_OWNER.UAS_ASSES_DISEASE@NEXUS2 A LEFT JOIN v_RAWDATA4 B ON REPLACE(CODE,'.','') = B.ORIG_CODE
               ) A
    ON C.DL_ASSESS_SK = A.RECORD_ID             
    LEFT JOIN DIM_CRONIC_CONDITIONS B
    ON (A.CODE = B.ICD_CODE and b.EXCL_FIELD IS NULL)
--    WHERE EXCL_FIELD IS NULL       
)
,RAWDATA3 AS (      
    SELECT /*+ use_hash(a b)*/
    A.MEMBER_ID, A.ASSESSMENTDATE, A.DL_ASSESS_SK
    ,MAX(CASE WHEN COMPLICATION = 'Colorectal Cancer' THEN 1 ELSE 0 END) AS COLORECTAL_CANCER
    ,MAX(CASE WHEN COMPLICATION = 'Chronic Kidney Disease' THEN 1 ELSE 0 END) AS CHRONIC_KIDNEY
    ,MAX(GREATEST(CASE WHEN COMPLICATION = 'Stroke / Transient Ischemic Attack' THEN 1 ELSE 0 END,B.STROKE_TRANSIENT_ISCHEMIC_ATT)) AS STROKE_TRANSIENT_ISCHEMIC_ATT
    ,MAX(CASE WHEN COMPLICATION = 'Hypertension' THEN 1 ELSE 0 END) AS HYPERTENSION
    ,MAX(GREATEST(CASE WHEN COMPLICATION = 'Heart Failure' THEN 1 ELSE 0 END,B.HEART_FAILURE)) AS HEART_FAILURE
    ,MAX(CASE WHEN COMPLICATION = 'Acquired Hypothyroidism' THEN 1 ELSE 0 END) AS ACQUIRED_HYPOTHYROIDISM
    ,MAX(CASE WHEN COMPLICATION = 'Prostate Cancer' THEN 1 ELSE 0 END) AS PROSTATE_CANCER
    ,MAX(CASE WHEN COMPLICATION = 'Ischemic Heart Disease' THEN 1 ELSE 0 END) AS ISCHEMIC_HEART
    ,MAX(GREATEST(CASE WHEN COMPLICATION = 'Diabetes' THEN 1 ELSE 0 END,B.DIABETES)) AS DIABETES
    ,MAX(CASE WHEN COMPLICATION = 'Atrial Fibrillation' THEN 1 ELSE 0 END) AS ATRIAL_FIBRILLATION
    ,MAX(CASE WHEN COMPLICATION = 'Endometrial Cancer' THEN 1 ELSE 0 END) AS ENDOMETRIAL_CANCER
    ,MAX(CASE WHEN COMPLICATION = 'Osteoporosis' THEN 1 ELSE 0 END) AS OSTEOPOROSIS
    ,MAX(CASE WHEN COMPLICATION = 'Glaucoma' THEN 1 ELSE 0 END) AS GLAUCOMA
    ,MAX(GREATEST(CASE WHEN COMPLICATION = 'Chronic Obstructive Pulmonary Disease and Bronchiectasis' THEN 1 ELSE 0 END,B.CHRONIC_OBSTR_PULMONARY)) AS CHRONIC_OBSTR_PULMONARY
    ,MAX(CASE WHEN COMPLICATION = 'Hyperlipidemia' THEN 1 ELSE 0 END) AS HYPERLIPIDEMIA
    ,MAX(GREATEST(CASE WHEN COMPLICATION = 'Alzheimer''s Disease and Related Disorders or Senile Dementia' THEN 1 ELSE 0 END, B.ALZHEIMERS_SENILE_DEMENTIA)) AS ALZHEIMERS_SENILE_DEMENTIA
    ,MAX(CASE WHEN COMPLICATION = 'Female / Male Breast Cancer' THEN 1 ELSE 0 END) AS F_M_BREAST_CANCER
    ,MAX(CASE WHEN COMPLICATION = 'Benign Prostatic Hyperplasia' THEN 1 ELSE 0 END) AS BENIGN_PROSTATIC_HYPERPLASIA
    ,MAX(GREATEST(CASE WHEN COMPLICATION = 'Hip/Pelvic Fracture' THEN 1 ELSE 0 END, B.HIP_PELVIC_FRACTURE)) AS HIP_PELVIC_FRACTURE
    ,MAX(CASE WHEN COMPLICATION = 'Anemia' THEN 1 ELSE 0 END) AS ANEMIA
    ,MAX(CASE WHEN COMPLICATION = 'Lung Cancer' THEN 1 ELSE 0 END) AS LUNG_CANCER
    ,MAX(CASE WHEN COMPLICATION = 'RA/OA (Rheumatoid Arthritis/ Osteoarthritis)' THEN 1 ELSE 0 END) AS RHEUMATOID_ARTHRITIS_OSTEOARTH
    ,MAX(GREATEST(CASE WHEN COMPLICATION = 'Depression' THEN 1 ELSE 0 END, B.DEPRESSION)) AS DEPRESSION
    ,MAX(CASE WHEN COMPLICATION = 'Cataract' THEN 1 ELSE 0 END) AS CATARACT
    ,MAX(CASE WHEN COMPLICATION = 'Acute Myocardial Infarction' THEN 1 ELSE 0 END) AS ACUTE_MYOCARDIAL_INFARCTION
    ,MAX(GREATEST(CASE WHEN COMPLICATION = 'Alzheimer''s Disease' THEN 1 ELSE 0 END,ALZHEIMERS)) AS ALZHEIMERS
    ,MAX(CASE WHEN COMPLICATION = 'Asthma' THEN 1 ELSE 0 END) AS ASTHMA
    FROM RAWDATA2 A
    LEFT JOIN RAWDATA1 B
    ON A.DL_ASSESS_SK = B.DL_ASSESS_SK AND A.MEMBER_ID = B.MEMBER_ID AND A.ASSESSMENTDATE = B.ASSESSMENTDATE
    GROUP BY A.DL_ASSESS_SK, A.MEMBER_ID, A.ASSESSMENTDATE
)  
SELECT MEMBER_ID, ASSESSMENTDATE, DL_ASSESS_SK
,ACQUIRED_HYPOTHYROIDISM 
,ACUTE_MYOCARDIAL_INFARCTION 
,ALZHEIMERS 
,ALZHEIMERS_SENILE_DEMENTIA 
,ANEMIA 
,ASTHMA 
,ATRIAL_FIBRILLATION 
,BENIGN_PROSTATIC_HYPERPLASIA 
,CATARACT
,CHRONIC_KIDNEY
,CHRONIC_OBSTR_PULMONARY
,DEPRESSION
,DIABETES 
,GLAUCOMA 
,HEART_FAILURE 
,HIP_PELVIC_FRACTURE 
,HYPERLIPIDEMIA 
,HYPERTENSION 
,ISCHEMIC_HEART 
,OSTEOPOROSIS 
,RHEUMATOID_ARTHRITIS_OSTEOARTH 
,STROKE_TRANSIENT_ISCHEMIC_ATT 
,F_M_BREAST_CANCER 
,COLORECTAL_CANCER 
,PROSTATE_CANCER 
,LUNG_CANCER 
,ENDOMETRIAL_CANCER 
FROM RAWDATA3



