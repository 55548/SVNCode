CREATE OR REPLACE VIEW V_UAS_RISK_SCORE 
AS
SELECT * FROM
(
            (
                SELECT  
                    MERCER_DOC_YEAR , 
                    B.RECORD_ID
                    , B.RISK_GROUP
                -- From Table 6.7 in Mercer Documentation
                    , CASE 
                        WHEN RISK_GROUP BETWEEN 0 AND 0 THEN 0.311
                        WHEN RISK_GROUP BETWEEN 1 AND 1 THEN 0.318
                        WHEN RISK_GROUP BETWEEN 2 AND 3 THEN 0.3795
                        WHEN RISK_GROUP BETWEEN 4 AND 4 THEN 0.4102
                        WHEN RISK_GROUP BETWEEN 5 AND 5 THEN 0.4122
                        WHEN RISK_GROUP BETWEEN 6 AND 6 THEN 0.4358
                        WHEN RISK_GROUP BETWEEN 7 AND 7 THEN 0.4366
                        WHEN RISK_GROUP BETWEEN 8 AND 8 THEN 0.4545
                        WHEN RISK_GROUP BETWEEN 9 AND 9 THEN 0.4688
                        WHEN RISK_GROUP BETWEEN 10 AND 10 THEN 0.4927
                        WHEN RISK_GROUP BETWEEN 11 AND 11 THEN 0.4967
                        WHEN RISK_GROUP BETWEEN 12 AND 12 THEN 0.5346
                        WHEN RISK_GROUP BETWEEN 13 AND 13 THEN 0.5673
                        WHEN RISK_GROUP BETWEEN 14 AND 14 THEN 0.5883
                        WHEN RISK_GROUP BETWEEN 15 AND 15 THEN 0.6253
                        WHEN RISK_GROUP BETWEEN 16 AND 16 THEN 0.649
                        WHEN RISK_GROUP BETWEEN 17 AND 17 THEN 0.6644
                        WHEN RISK_GROUP BETWEEN 18 AND 18 THEN 0.6951
                        WHEN RISK_GROUP BETWEEN 19 AND 19 THEN 0.7284
                        WHEN RISK_GROUP BETWEEN 20 AND 20 THEN 0.7669
                        WHEN RISK_GROUP BETWEEN 21 AND 21 THEN 0.7944
                        WHEN RISK_GROUP BETWEEN 22 AND 22 THEN 0.8255
                        WHEN RISK_GROUP BETWEEN 23 AND 23 THEN 0.8592
                        WHEN RISK_GROUP BETWEEN 24 AND 24 THEN 0.8759
                        WHEN RISK_GROUP BETWEEN 25 AND 25 THEN 0.9115
                        WHEN RISK_GROUP BETWEEN 26 AND 26 THEN 0.9352
                        WHEN RISK_GROUP BETWEEN 27 AND 27 THEN 0.9887
                        WHEN RISK_GROUP BETWEEN 28 AND 28 THEN 1.0048
                        WHEN RISK_GROUP BETWEEN 29 AND 29 THEN 1.014
                        WHEN RISK_GROUP BETWEEN 30 AND 30 THEN 1.0654
                        WHEN RISK_GROUP BETWEEN 31 AND 31 THEN 1.1067
                        WHEN RISK_GROUP BETWEEN 32 AND 32 THEN 1.1302
                        WHEN RISK_GROUP BETWEEN 33 AND 33 THEN 1.1574
                        WHEN RISK_GROUP BETWEEN 34 AND 34 THEN 1.1962
                        WHEN RISK_GROUP BETWEEN 35 AND 36 THEN 1.2299
                        WHEN RISK_GROUP BETWEEN 37 AND 37 THEN 1.2903
                        WHEN RISK_GROUP BETWEEN 38 AND 38 THEN 1.3255
                        WHEN RISK_GROUP BETWEEN 39 AND 39 THEN 1.3728
                        WHEN RISK_GROUP BETWEEN 40 AND 40 THEN 1.4214
                        WHEN RISK_GROUP BETWEEN 41 AND 41 THEN 1.4265
                        WHEN RISK_GROUP BETWEEN 42 AND 42 THEN 1.4403
                        WHEN RISK_GROUP BETWEEN 43 AND 43 THEN 1.5123
                        WHEN RISK_GROUP BETWEEN 44 AND 44 THEN 1.5501
                        WHEN RISK_GROUP BETWEEN 45 AND 46 THEN 1.5684
                        WHEN RISK_GROUP BETWEEN 47 AND 47 THEN 1.6431
                        WHEN RISK_GROUP BETWEEN 48 AND 48 THEN 1.6687
                        WHEN RISK_GROUP BETWEEN 49 AND 50 THEN 1.674
                        WHEN RISK_GROUP BETWEEN 51 AND 51 THEN 1.694
                        WHEN RISK_GROUP BETWEEN 52 AND 54 THEN 1.7447
                        WHEN RISK_GROUP BETWEEN 55 AND 55 THEN 1.7743
                        WHEN RISK_GROUP BETWEEN 56 AND 56 THEN 1.8101
                        WHEN RISK_GROUP BETWEEN 57 AND 58 THEN 1.8711
                        WHEN RISK_GROUP BETWEEN 59 AND 60 THEN 1.8858
                        WHEN RISK_GROUP BETWEEN 61 AND 61 THEN 1.942
                        WHEN RISK_GROUP BETWEEN 62 AND 63 THEN 1.9862
                        WHEN RISK_GROUP BETWEEN 64 AND 67 THEN 2.1061
                        WHEN RISK_GROUP BETWEEN 68 AND 69 THEN 2.1477
                        WHEN RISK_GROUP BETWEEN 70 AND 74 THEN 2.3906
                        WHEN RISK_GROUP BETWEEN 75 AND 82 THEN 2.5829
                        WHEN RISK_GROUP BETWEEN 83 AND 104 THEN 2.8941
                      END AS RISK_SCORE
                FROM
                    (
                    SELECT 
                        2017 MERCER_DOC_YEAR , A.RECORD_ID
                        , ADLBATHING_SC + ADLBED_SC + ADLDRESSCOMB_SC + ADLTOILETTRANSFER_SC + 
                            ADLWALKING_SC + ADLHIERARCHYSCALE_SC + BLADDERCONTINENCE_SC + BOWELCONTINENCE_SC + 
                            CARDIACFAILURE_SC + FOOTPROBLEMS_SC + IADLCAPACITYMEALS_SC + IADLCAPACITYMEDS_SC + 
                            IADLCAPACITYPHONE_SC + IADLCAPACITYSTAIRS_SC + IADLCAPACITYTRANSPORT_SC + 
                            LOCOMOTIONINDOORS_SC + NEUROLOGICALALZDEM_SC + NEUROLOGICALPLEGIA_SC + 
                            NEUROLOGICPARKMS_SC + PROBLEMSTANDING_SC + VISION_SC + FEMALE_SC + AGED80PLUS_SC + 
                            BEHAVIORWANDERING_SC + COGNITIVESKILLS_SC + QUADBOWEL_SC + ALZDEMTOILET_SC  
                          AS RISK_GROUP
                    FROM 
                        (
                            SELECT 
                                COALESCE(A.RECORD_ID, B.RECORD_ID, C.RECORD_ID) AS RECORD_ID
                            -- From Table 6.6 in Mercer Documentation        
                             , CASE ADLBATHING WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 0 WHEN 5 THEN 0 WHEN 6 THEN 2 WHEN 8 THEN 2 ELSE  NULL END AS ADLBATHING_SC
                             , CASE ADLBED WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 2 WHEN 3 THEN 2 WHEN 4 THEN 5 WHEN 5 THEN 5 WHEN 6 THEN 9 WHEN 8 THEN 0 ELSE  NULL END AS ADLBED_SC
                             , CASE CASE WHEN ADLDRESSLOWER IN(1,2,3) AND ADLDRESSUPPER IN(1,2,3,4,5) THEN 1
                                       WHEN ADLDRESSLOWER IN(4,5) AND ADLDRESSUPPER IN(1,2,3) THEN 2
                                       WHEN ADLDRESSLOWER IN(4,5) AND ADLDRESSUPPER IN(4,5) THEN 3
                                       WHEN ADLDRESSUPPER IN(6,8) OR (ADLDRESSLOWER IN(6,8) AND ADLDRESSUPPER IN(0,1,2,3,4,5)) THEN 4
                                       ELSE 0
                                    END WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 5 WHEN 3 THEN 9 WHEN 4 THEN 11 WHEN 5 THEN 0 WHEN 6 THEN 0 WHEN 8 THEN 0 ELSE  NULL END AS ADLDRESSCOMB_SC
                             , CASE ADLTOILETTRANSFER WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 2 WHEN 3 THEN 2 WHEN 4 THEN 6 WHEN 5 THEN 6 WHEN 6 THEN 6 WHEN 8 THEN 6 ELSE  NULL END AS ADLTOILETTRANSFER_SC
                             , CASE ADLWALKING WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 1 WHEN 5 THEN 1 WHEN 6 THEN 1 WHEN 8 THEN 1 ELSE  NULL END AS ADLWALKING_SC
                             , CASE S.VALUE WHEN 0 THEN 0 WHEN 1 THEN 1 WHEN 2 THEN 2 WHEN 3 THEN 3 WHEN 4 THEN 4 WHEN 5 THEN 5 WHEN 6 THEN 6 WHEN 8 THEN NULL ELSE  NULL END AS ADLHIERARCHYSCALE_SC
                             , CASE BLADDERCONTINENCE WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 0 WHEN 3 THEN 3 WHEN 4 THEN 3 WHEN 5 THEN 3 WHEN 6 THEN NULL WHEN 8 THEN 3 ELSE  NULL END AS BLADDERCONTINENCE_SC
                             , CASE BOWELCONTINENCE WHEN 0 THEN 0 WHEN 1 THEN 3 WHEN 2 THEN 0 WHEN 3 THEN 3 WHEN 4 THEN 3 WHEN 5 THEN 3 WHEN 6 THEN NULL WHEN 8 THEN 0 ELSE  NULL END AS BOWELCONTINENCE_SC
                             , CASE CARDIACFAILURE WHEN 0 THEN 0 WHEN 1 THEN 1 WHEN 2 THEN 1 WHEN 3 THEN 1 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS CARDIACFAILURE_SC
                             , CASE FOOTPROBLEMS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 2 WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS FOOTPROBLEMS_SC
                             , CASE IADLCAPACITYMEALS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 4 WHEN 5 THEN 4 WHEN 6 THEN 4 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYMEALS_SC
                             , CASE IADLCAPACITYMEDS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 1 WHEN 5 THEN 1 WHEN 6 THEN 1 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYMEDS_SC
                             , CASE IADLCAPACITYPHONE WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 2 WHEN 5 THEN 2 WHEN 6 THEN 2 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYPHONE_SC
                             , CASE IADLCAPACITYSTAIRS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 1 WHEN 5 THEN 1 WHEN 6 THEN 1 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYSTAIRS_SC
                             , CASE IADLCAPACITYTRANSPORT WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 1 WHEN 5 THEN 1 WHEN 6 THEN 1 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYTRANSPORT_SC
                             , CASE LOCOMOTIONINDOORS WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 3 WHEN 3 THEN 5 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS LOCOMOTIONINDOORS_SC
                             , CASE CASE WHEN GREATEST(NEUROLOGICALALZHEIMERS, NEUROLOGICALDEMENTIA)>=1 THEN GREATEST(NEUROLOGICALALZHEIMERS, NEUROLOGICALDEMENTIA)
                                         WHEN (GREATEST(NEUROLOGICALALZHEIMERS, NEUROLOGICALDEMENTIA)<1 
                                                OR NEUROLOGICALALZHEIMERS IS NULL 
                                                OR NEUROLOGICALDEMENTIA IS NULL) THEN 0 
                                    END WHEN 0 THEN 0 WHEN 1 THEN 3 WHEN 2 THEN 3 WHEN 3 THEN 3 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS NEUROLOGICALALZDEM_SC
                             , CASE CASE WHEN NEUROLOGICALQUADRAPLEGIA>=1 THEN 3
                                         WHEN NEUROLOGICALPARAPLEGIA>=1 THEN 2
                                         WHEN NEUROLOGICALHEMIPLEGIA>=1 THEN 1
                                         WHEN (GREATEST(NEUROLOGICALHEMIPLEGIA, NEUROLOGICALPARAPLEGIA, NEUROLOGICALQUADRAPLEGIA)=0 
                                                OR NEUROLOGICALHEMIPLEGIA IS NULL OR NEUROLOGICALPARAPLEGIA IS NULL
                                                OR NEUROLOGICALQUADRAPLEGIA IS NULL) THEN 0 
                                    END WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 3 WHEN 3 THEN 26 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS NEUROLOGICALPLEGIA_SC
                             , CASE CASE WHEN GREATEST(NEUROLOGICALPARKINSONS, NEUROLOGICALMS)>=1 THEN GREATEST(NEUROLOGICALPARKINSONS, NEUROLOGICALMS)
                                         WHEN (GREATEST(NEUROLOGICALPARKINSONS, NEUROLOGICALMS)<1 OR NEUROLOGICALPARKINSONS IS NULL 
                                                    OR NEUROLOGICALMS IS NULL) THEN 0 
                                    END WHEN 0 THEN 0 WHEN 1 THEN 3 WHEN 2 THEN 3 WHEN 3 THEN 3 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS NEUROLOGICPARKMS_SC
                             , CASE PROBLEMSTANDING WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 1 WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS PROBLEMSTANDING_SC
                             , CASE VISION WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 3 WHEN 4 THEN 3 WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS VISION_SC
                             , CASE CASE WHEN C.GENDER='1' THEN 0 WHEN C.GENDER='2' THEN 1 ELSE NULL END WHEN 0 THEN 0 WHEN 1 THEN 1 WHEN 2 THEN NULL WHEN 3 THEN NULL WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS FEMALE_SC
                             , CASE CASE WHEN TRUNC(MONTHS_BETWEEN(A.ASSESSMENTDATE, C.DATEOFBIRTH)/12)>=80 THEN 1 ELSE 0 END WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN NULL WHEN 3 THEN NULL WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS AGED80PLUS_SC
                             , CASE BEHAVIORWANDERING WHEN 0 THEN 0 WHEN 1 THEN 4 WHEN 2 THEN 4 WHEN 3 THEN 4 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS BEHAVIORWANDERING_SC
                             , CASE COGNITIVESKILLS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 2 WHEN 3 THEN 2 WHEN 4 THEN 2 WHEN 5 THEN 2 WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS COGNITIVESKILLS_SC
                             , CASE CASE WHEN BOWELCONTINENCE IN(1,3,4,5) AND NEUROLOGICALQUADRAPLEGIA IN (1,2,3) THEN 1
                                    ELSE 0
                                  END WHEN 0 THEN 0 WHEN 1 THEN 9 WHEN 2 THEN NULL WHEN 3 THEN NULL WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS QUADBOWEL_SC
                             , CASE CASE WHEN (NEUROLOGICALALZHEIMERS IN(1,2,3) OR NEUROLOGICALDEMENTIA IN(1,2,3)) AND ADLTOILETTRANSFER IN (1,2,3) THEN 1 
                                       ELSE 0
                                   END WHEN 0 THEN 0 WHEN 1 THEN 3 WHEN 2 THEN NULL WHEN 3 THEN NULL WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS ALZDEMTOILET_SC
                            FROM DW_OWNER.UAS_COMMUNITYHEALTH A 
                            FULL JOIN DW_OWNER.UAS_CHASUPPLEMENT B ON(A.RECORD_ID=B.RECORD_ID)
                            FULL JOIN DW_OWNER.UAS_PAT_ASSESSMENTS C ON (A.RECORD_ID=C.RECORD_ID)
                            LEFT JOIN DW_OWNER.UAS_SCALE S ON(S.RECORD_ID=A.RECORD_ID AND NAME='ADL Hierarchy Scale')
                            WHERE COALESCE(A.RECORD_ID, B.RECORD_ID, C.RECORD_ID) IS NOT NULL
                        ) A
                    ) B            
            )            
            UNION ALL        
            (
            SELECT
            2016 MERCER_DOC_YEAR  
            , B.RECORD_ID
            , B.RISK_GROUP
            , C.CAC_VALUE AS RISK_SCORE
            FROM
            (
                SELECT A.RECORD_ID
                    , ADLBED_SC + ADLDRESSUPPER_SC + ADLTOILETUSE_SC + ADLWALKING_SC + ADLHIERARCHYSCALE_SC +
                        BLADDERCONTINENCE_SC + BOWELCONTINENCE_SC + CARDIACFAILURE_SC + FOOTPROBLEMS_SC +
                        IADLCAPACITYMEALS_SC + IADLCAPACITYMEDS_SC + IADLCAPACITYPHONE_SC + IADLCAPACITYSTAIRS_SC +
                        LOCOMOTIONINDOORS_SC + MEMORYRECALLPROCEDURAL_SC + NEUROLOGICALALZDEM_SC + NEUROLOGICALPLEGIA_SC +
                        NEUROLOGICPARKMS_SC + NEUROLOGICALSTROKE_SC + PROBLEMSTANDING_SC + VISION_SC + DISEASEADL_SC +
                        FEMALE_SC + AGED80PLUS_SC  AS RISK_GROUP
                FROM
                    (
                        SELECT COALESCE(A.RECORD_ID, B.RECORD_ID, C.RECORD_ID) AS RECORD_ID
                        -- From Table 6.6 in Mercer Documentation
                        , CASE ADLBED WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 2 WHEN 3 THEN 2 WHEN 4 THEN 5 WHEN 5 THEN 5 WHEN 6 THEN 7 WHEN 8 THEN 0 ELSE  NULL END AS ADLBED_SC
                        , CASE ADLDRESSUPPER WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 2 WHEN 3 THEN 2 WHEN 4 THEN 6 WHEN 5 THEN 6 WHEN 6 THEN 9 WHEN 8 THEN 9 ELSE  NULL END AS ADLDRESSUPPER_SC
                        , CASE ADLTOILETUSE WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 2 WHEN 3 THEN 2 WHEN 4 THEN 8 WHEN 5 THEN 8 WHEN 6 THEN 9 WHEN 8 THEN 9 ELSE  NULL END AS ADLTOILETUSE_SC
                        , CASE ADLWALKING WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 2 WHEN 3 THEN 2 WHEN 4 THEN 3 WHEN 5 THEN 3 WHEN 6 THEN 3 WHEN 8 THEN 3 ELSE  NULL END AS ADLWALKING_SC
                        , CASE S.VALUE WHEN 0 THEN 0 WHEN 1 THEN 1 WHEN 2 THEN 2 WHEN 3 THEN 3 WHEN 4 THEN 4 WHEN 5 THEN 5 WHEN 6 THEN 6 WHEN 8 THEN NULL ELSE  NULL END AS ADLHIERARCHYSCALE_SC
                        , CASE BLADDERCONTINENCE WHEN 0 THEN 0 WHEN 1 THEN 4 WHEN 2 THEN 0 WHEN 3 THEN 3 WHEN 4 THEN 3 WHEN 5 THEN 3 WHEN 6 THEN NULL WHEN 8 THEN 3 ELSE  NULL END AS BLADDERCONTINENCE_SC
                        , CASE BOWELCONTINENCE WHEN 0 THEN 0 WHEN 1 THEN 3 WHEN 2 THEN 0 WHEN 3 THEN 3 WHEN 4 THEN 3 WHEN 5 THEN 3 WHEN 6 THEN NULL WHEN 8 THEN 0 ELSE  NULL END AS BOWELCONTINENCE_SC
                        , CASE CARDIACFAILURE WHEN 0 THEN 0 WHEN 1 THEN 1 WHEN 2 THEN 1 WHEN 3 THEN 1 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS CARDIACFAILURE_SC
                        , CASE FOOTPROBLEMS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 2 WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS FOOTPROBLEMS_SC
                        , CASE IADLCAPACITYMEALS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 5 WHEN 5 THEN 5 WHEN 6 THEN 5 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYMEALS_SC
                        , CASE IADLCAPACITYMEDS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 1 WHEN 5 THEN 1 WHEN 6 THEN 1 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYMEDS_SC
                        , CASE IADLCAPACITYPHONE WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 1 WHEN 5 THEN 1 WHEN 6 THEN 1 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYPHONE_SC
                        , CASE IADLCAPACITYSTAIRS WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 2 WHEN 5 THEN 2 WHEN 6 THEN 2 WHEN 8 THEN NULL ELSE  NULL END AS IADLCAPACITYSTAIRS_SC
                        , CASE LOCOMOTIONINDOORS WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 5 WHEN 3 THEN 5 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS LOCOMOTIONINDOORS_SC
                        , CASE MEMORYRECALLPROCEDURAL WHEN 0 THEN 0 WHEN 1 THEN 1 WHEN 2 THEN NULL WHEN 3 THEN NULL WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE NULL END AS MEMORYRECALLPROCEDURAL_SC
                        , CASE CASE WHEN GREATEST(NEUROLOGICALALZHEIMERS, NEUROLOGICALDEMENTIA)>=1 THEN GREATEST(NEUROLOGICALALZHEIMERS, NEUROLOGICALDEMENTIA)
                                     WHEN (GREATEST(NEUROLOGICALALZHEIMERS, NEUROLOGICALDEMENTIA)<1
                                            OR NEUROLOGICALALZHEIMERS IS NULL
                                            OR NEUROLOGICALDEMENTIA IS NULL) THEN 0
                          END WHEN 0 THEN 0 WHEN 1 THEN 6 WHEN 2 THEN 6 WHEN 3 THEN 6 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE 0 END AS NEUROLOGICALALZDEM_SC
                        , CASE CASE WHEN NEUROLOGICALQUADRAPLEGIA>=1 THEN 3
                                     WHEN NEUROLOGICALPARAPLEGIA>=1 THEN 2
                                     WHEN NEUROLOGICALHEMIPLEGIA>=1 THEN 1
                                     WHEN (GREATEST(NEUROLOGICALHEMIPLEGIA, NEUROLOGICALPARAPLEGIA, NEUROLOGICALQUADRAPLEGIA)=0
                                            OR NEUROLOGICALHEMIPLEGIA IS NULL OR NEUROLOGICALPARAPLEGIA IS NULL
                                            OR NEUROLOGICALQUADRAPLEGIA IS NULL) THEN 0
                          END WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 5 WHEN 3 THEN 18 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS NEUROLOGICALPLEGIA_SC
                        , CASE CASE WHEN GREATEST(NEUROLOGICALPARKINSONS, NEUROLOGICALMS)>=1 THEN GREATEST(NEUROLOGICALPARKINSONS, NEUROLOGICALMS)
                                      WHEN (GREATEST(NEUROLOGICALPARKINSONS, NEUROLOGICALMS)<1 OR NEUROLOGICALPARKINSONS IS NULL
                                                OR NEUROLOGICALMS IS NULL) THEN 0
                          END WHEN 0 THEN 0 WHEN 1 THEN 2 WHEN 2 THEN 2 WHEN 3 THEN 2 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS NEUROLOGICPARKMS_SC
                        , CASE NEUROLOGICALSTROKE WHEN 0 THEN 0 WHEN 1 THEN 1 WHEN 2 THEN 1 WHEN 3 THEN 1 WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS NEUROLOGICALSTROKE_SC
                        , CASE PROBLEMSTANDING WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 0 WHEN 4 THEN 1 WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS PROBLEMSTANDING_SC
                        , CASE VISION WHEN 0 THEN 0 WHEN 1 THEN 0 WHEN 2 THEN 0 WHEN 3 THEN 3 WHEN 4 THEN 3 WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  0 END AS VISION_SC
                        , CASE CASE WHEN ADLBED=6 AND NEUROLOGICALQUADRAPLEGIA>=1 THEN 1 ELSE 0 END WHEN 0 THEN 0 WHEN 1 THEN 17 WHEN 2 THEN NULL WHEN 3 THEN NULL WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS DISEASEADL_SC
                        , CASE CASE WHEN C.GENDER='1' THEN 0 WHEN C.GENDER='2' THEN 1 ELSE NULL END WHEN 0 THEN 0 WHEN 1 THEN 1 WHEN 2 THEN NULL WHEN 3 THEN NULL WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS FEMALE_SC
                        , CASE CASE WHEN TRUNC(MONTHS_BETWEEN(A.ASSESSMENTDATE, C.DATEOFBIRTH)/12)>=80 THEN 1 ELSE 0 END WHEN 0 THEN 0 WHEN 1 THEN 3 WHEN 2 THEN NULL WHEN 3 THEN NULL WHEN 4 THEN NULL WHEN 5 THEN NULL WHEN 6 THEN NULL WHEN 8 THEN NULL ELSE  NULL END AS AGED80PLUS_SC
                    FROM DW_OWNER.UAS_COMMUNITYHEALTH A
                    FULL JOIN DW_OWNER.UAS_CHASUPPLEMENT B ON(A.RECORD_ID=B.RECORD_ID)
                    FULL JOIN DW_OWNER.UAS_PAT_ASSESSMENTS C ON (A.RECORD_ID=C.RECORD_ID)
                    LEFT JOIN DW_OWNER.UAS_SCALE S ON(S.RECORD_ID=A.RECORD_ID AND NAME='ADL Hierarchy Scale')
                   WHERE COALESCE(A.RECORD_ID, B.RECORD_ID, C.RECORD_ID) IS NOT NULL
                    ) A
                ) B
            LEFT JOIN (SELECT * FROM MSTRSTG.CHOICE_APP_CONFIG WHERE CAC_TOKEN = 'uas_risk_group') C
            ON  B.RISK_GROUP BETWEEN C.LOWER_BOUND AND UPPER_BOUND
            )
) A ;
--where mercer_doc_year = (select max(mercer_doc_year) from uas_risk_score)            



CREATE OR REPLACE VIEW V_FACT_MEMBER_MONTH_RISK AS
SELECT A.*, B.RISK_GROUP, B.RISK_SCORE 
FROM 
    FACT_MEMBER_MONTH A 
    LEFT OUTER JOIN  (select * from V_UAS_RISK_SCORE where MERCER_DOC_YEAR = (SELECT MAX(MERCER_DOC_YEAR) FROM UAS_RISK_SCORE)) B ON 
    (
        A.UAS_RECORD_ID = B.RECORD_ID 
    );